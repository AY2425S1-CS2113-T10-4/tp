@startuml
actor User
participant SpendSwift
participant Parser
participant ExpenseManager
participant TrackerData
participant InputParser
participant ErrorMessage
participant SuccessMessage
participant Format
participant Category
participant Expense

User -> SpendSwift : input("tag-expense 1 /category Food")
SpendSwift -> Parser : parseCommand(input, trackerData)

activate Parser
Parser -> ExpenseManager : tagExpense(trackerData, input)

activate ExpenseManager
ExpenseManager -> InputParser : parseIndex(input)
InputParser --> ExpenseManager : Return expenseIndex

alt Invalid Index
    ExpenseManager -> ErrorMessage : printInvalidIndex()
    deactivate ExpenseManager
    deactivate Parser
else Valid Index
    ExpenseManager -> InputParser : parseCategory(input)
    InputParser --> ExpenseManager : Return categoryName

    alt Invalid or Empty Category
        ExpenseManager -> ErrorMessage : printExpensesManagerEmptyCategory()
        deactivate ExpenseManager
        deactivate Parser
    else Valid Category
        ExpenseManager -> ExpenseManager : tagExpenseHelper(trackerData, expenseIndex, categoryName)

        activate ExpenseManager
        ExpenseManager -> TrackerData : getExpenses()
        TrackerData --> ExpenseManager : Return list of expenses

        ExpenseManager -> TrackerData : getCategories()
        TrackerData --> ExpenseManager : Return list of categories

        ExpenseManager -> Format : formatInput(categoryName)
        Format --> ExpenseManager : Return formattedCategoryName

        loop Check each category
            ExpenseManager -> Category : Check if name matches formattedCategoryName
        end

        alt Matching Category Found
            ExpenseManager -> Expense : setCategory(matchingCategory)
            ExpenseManager -> SuccessMessage : printTaggedExpense(expense)
        else No Matching Category
            ExpenseManager -> SuccessMessage : printMissingCategory(formattedCategoryName)
        end
        deactivate ExpenseManager
    end
end
deactivate Parser
@enduml
