@startuml

actor User
participant Duke
participant ExpenseTracker
participant Expense
participant Category

User -> Duke : input("view-expenses")
activate Duke

Duke -> ExpenseTracker : viewExpensesByCategory()
activate ExpenseTracker

alt No Expenses
    ExpenseTracker -> User : Print "No expenses to display."
else Expenses Exist
    ExpenseTracker -> ExpenseTracker : Initialize expensesByCategory Map

    loop Populate Expenses By Category
        ExpenseTracker -> Expense : Get category for each expense
        activate Expense
        Expense --> ExpenseTracker : Return category
        deactivate Expense

        alt Category Exists
            ExpenseTracker -> ExpenseTracker : Add expense to existing category list
        else New Category
            ExpenseTracker -> ExpenseTracker : Create new category list and add expense
        end
    end

    loop Print Grouped Expenses by Category
        ExpenseTracker -> Category : Get category name
        activate Category
        Category --> ExpenseTracker : Return category name
        deactivate Category

        ExpenseTracker -> User : Print "Category: <Category>"

        loop Print Each Expense
            ExpenseTracker -> Expense : Get expense details
            activate Expense
            Expense --> ExpenseTracker : Return formatted expense details
            deactivate Expense

            ExpenseTracker -> User : Print formatted expense details
        end
    end
end
deactivate ExpenseTracker
deactivate Duke

@enduml
