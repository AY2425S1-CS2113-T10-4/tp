@startuml

actor User
participant SpendSwift
participant Parser
participant CategoryManager
participant Category
participant TrackerData

User -> SpendSwift : input("add-category <categoryName>")
SpendSwift -> Parser : parseCommand(input, trackerData)

activate Parser
Parser -> CategoryManager : addCategory(input, trackerData)

activate CategoryManager
CategoryManager -> CategoryManager : parseCategory(input)
CategoryManager -> CategoryManager : trim and format input
CategoryManager -> CategoryManager : check if categoryName is empty

alt categoryName is empty
    CategoryManager -> Parser : "Category name is empty!"
else categoryName is not empty
    CategoryManager -> TrackerData : getCategories()
    CategoryManager -> CategoryManager : check if categoryName exists in categories

    alt category already exists
        CategoryManager -> Parser : "Category '<categoryName>' already exists!"
    else category does not exist
        CategoryManager -> Category : new Category(formattedCategoryName)
        activate Category
        Category --> CategoryManager : return new Category instance
        deactivate Category

        CategoryManager -> TrackerData : Add new Category to categories
        CategoryManager -> Parser : "Category '<categoryName>' added successfully."
    end
end

deactivate CategoryManager
deactivate Parser
@enduml
